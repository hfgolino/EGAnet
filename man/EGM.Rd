% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EGM.R
\name{EGM}
\alias{EGM}
\title{Exploratory Graph Model}
\usage{
EGM(
  data,
  EGM.model = c("explore", "EGA", "probability"),
  communities = NULL,
  structure = NULL,
  search = FALSE,
  p.in = NULL,
  p.out = NULL,
  opt = c("logLik", "SRMR"),
  proximal = c("l1", "l2", "MCP", "SCAD"),
  model.select = c("logLik", "AIC", "AICc", "AICq", "BIC", "Q"),
  constrain.structure = TRUE,
  constrain.zeros = TRUE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{data}{Matrix or data frame.
Should consist only of variables to be used in the analysis.
Can be raw data or a correlation matrix}

\item{EGM.model}{Character vector (length = 1).
Sets the procedure to conduct \code{EGM}.
Available options:

\itemize{

\item \code{"explore"} --- A two-step procedure where the first step estimates
network loadings for Walktrap community structures up to \code{communities} using the
standard beta-min condition to threshold the network. The second step computes networks
using the community-aware beta-min criterion based on the
loading-implied partial correlation matrices from the previous step. The
network (corresponding to communities and a set of loadings) with the lowest
BIC is selected as the model. An optional (but recommended and default) procedure is to
optimize the network toward the model-implied zero-order correlation matrix
(`network.optimize = TRUE`); otherwise, the community-aware beta-min criterion is used
on the model-implied partial correlation matrix.

\item \code{"EGA"} (default) --- Applies \code{\link[EGAnet]{EGA}} to obtain the
(sparse) regularized network structure, communities, and memberships

\item \code{"probability"} --- Estimates communities based on the non-regularized
empirical partial correlation matrix and sparsity is set using probabilities for the
within- (\code{p.in}) and between-community (\code{p.out}) connectivity

}}

\item{communities}{Numeric vector (length = 1).
Number of communities to use for the \code{"standard"} type of EGM.
Defaults to \code{NULL}.
Providing no input will use the communities and memberships output
from the Walktrap algorithm (\code{\link[igraph]{cluster_walktrap}}) based
on the empirical non-regularized partial correlation matrix}

\item{structure}{Numeric or character vector (length = \code{ncol(data)}).
Can be theoretical factors or the structure detected by \code{\link[EGAnet]{EGA}}.
Defaults to \code{NULL}}

\item{search}{Boolean (length = 1).
Whether a search over parameters should be conducted.
Defaults to \code{FALSE}.
Set to \code{TRUE} to select a model over a variety of parameters that
optimizes the \code{opt} objective}

\item{p.in}{Numeric vector (length = 1).
Probability that a node is randomly linked to other nodes in the same community.
Within community edges are set to zero based on \code{quantile(x, prob = 1 - p.in)}
ensuring the lowest edge values are set to zero (i.e., most probable to \emph{not}
be randomly connected).
Only used for \code{EGM.type = "standard"}.
Defaults to \code{NULL} but must be set}

\item{p.out}{Numeric vector (length = 1).
Probability that a node is randomly linked to other nodes \emph{not} in the same community.
Between community edges are set to zero based on \code{quantile(x, prob = 1 - p.out)}
ensuring the lowest edge values are set to zero (i.e., most probable to \emph{not}
be randomly connected).
Only used for \code{EGM.type = "standard"} and \code{search = FALSE}.
Defaults to \code{NULL} but must be set}

\item{opt}{Character vector (length = 1).
Fit index used to select from when searching over models
(only applies to \code{search = TRUE}).
Available options include maximum likelihood (default; \code{"logLik"}) and
standardized root mean residual (\code{"SRMR"})}

\item{model.select}{Character vector (length = 1).
Criterion to select the best fitting model.
Defaults to \code{"AICq"}.
Available options:

\itemize{

\item \code{"logLik"} --- log-likelihood; not recommended as more communities
will \emph{almost} always have better likelihood; \eqn{\log{(\hat{L})}}

\item \code{"AIC"} --- Akaike's information criterion;
\eqn{-2\log{(\hat{L})} \cdot 2k} where
\emph{k} is the number of parameters (non-zero edges plus non-loadings)

\item \code{"AICc"} --- Corrected AIC (adjusts for sample size);
\eqn{AIC + \frac{2k^2 + 2k}{n - k - 1}} where \emph{n} is sample size

\item \code{"AICq"} (default)--- Modularity adjusted AIC;
\eqn{AIC + 6Q\log{n}} where
\emph{Q} is modularity (see below). The constant of 6 adjust modularity
such that it contributes roughly 4-6 AIC for each increase in 0.10 modularity
across most usual sample sizes (between 500-10000)

\item \code{"BIC"} --- Bayesian information criterion;
\eqn{k\log{n} - 2\log{(\hat{L})}}

\item \code{"Q"} --- Modularity;
\eqn{\frac{1}{2m} \sum_{ij} (A_{ij} - \frac{k_i k_j}{2m}) \delta(c_i, c_j)} where
\emph{m} is the sum total edges of the network, \emph{A}, \emph{k} is the
node strength, and \emph{c} is the membership of nodes \emph{i} and \emph{j}

}}

\item{constrain.structure}{Boolean (length = 1).
Whether memberships of the communities should
be added as a constraint when optimizing the network loadings.
Defaults to \code{TRUE} which ensures assigned loadings are
guaranteed to never be smaller than any cross-loadings.
Set to \code{FALSE} to freely estimate each loading similar to exploratory factor analysis}

\item{constrain.zeros}{Boolean (length = 1).
Whether zeros in the estimated network loading matrix should
be retained when optimizing the network loadings.
Defaults to \code{TRUE} which ensures that zero networks loadings are retained.
Set to \code{FALSE} to freely estimate each loading similar to exploratory factor analysis}

\item{verbose}{Boolean (length = 1).
Should progress be displayed?
Defaults to \code{TRUE}.
Set to \code{FALSE} to not display progress}

\item{...}{Additional arguments to be passed on to
\code{\link[EGAnet]{auto.correlate}},
\code{\link[EGAnet]{network.estimation}},
\code{\link[EGAnet]{community.detection}},
\code{\link[EGAnet]{community.consensus}},
\code{\link[EGAnet]{community.unidimensional}},
\code{\link[EGAnet]{EGA}}, and
\code{\link[EGAnet]{net.loads}}}
}
\description{
Function to fit the Exploratory Graph Model
}
\examples{
# Get depression data
data <- depression[,24:44]

\dontrun{
# Estimate EGM (using "explore")
egm <- EGM(data)

# Constrain EGM to only estimate 3 communities
egm_communities <- EGM(data, communities = 3)

# Estimate EGM (using EGA) specifying structure
egm_ega_structure <- EGM(
  data, structure = c(
    1, 1, 1, 2, 1, 1, 1,
    1, 1, 1, 3, 2, 2, 2,
    2, 3, 3, 3, 3, 3, 2
  ), EGM.model = "EGA"
)


# Estimate EGM (using EGA search)
egm_ega_search <- EGM(data, EGM.model = "EGA", search = TRUE)

# Estimate EGM (using search)
egm_prob_search <- EGM(
  data, EGM.model = "probability", search = TRUE,
  communities = 3, # need communities or structure
  p.in = 0.95 # only need 'p.in'
)}

}
\author{
Hudson F. Golino <hfg9s at virginia.edu> and Alexander P. Christensen <alexpaulchristensen@gmail.com>
}
